name: mycelian-memory-service

services:
  spanner-emulator:
    container_name: spanner-emulator
    image: gcr.io/cloud-spanner-emulator/emulator:latest
    platform: linux/arm64
    ports:
      - "9010:9010"
      - "9020:9020"
    environment:
      - SPANNER_EMULATOR_HOST=0.0.0.0:9010
    networks:
      - memory-network

  schema-setup:
    container_name: schema-setup
    image: google/cloud-sdk:alpine
    depends_on:
      - spanner-emulator
    environment:
      - SPANNER_EMULATOR_HOST=spanner-emulator:9010
    volumes:
      - ../../server/internal/storage/schema.sql:/schema/schema.sql:ro
      - ../../server/scripts/docker-setup/docker-setup-schema.sh:/scripts/setup-schema.sh:ro
    command: ["sh", "/scripts/setup-schema.sh"]
    networks:
      - memory-network
    restart: "no"

  db-health-check:
    container_name: db-health-check
    image: google/cloud-sdk:alpine
    depends_on:
      schema-setup:
        condition: service_completed_successfully
    environment:
      - SPANNER_EMULATOR_HOST=spanner-emulator:9010
    volumes:
      - ../../server/scripts/docker-setup/docker-health-check.sh:/scripts/health-check.sh:ro
    command: ["sh", "/scripts/health-check.sh"]
    networks:
      - memory-network
    restart: "no"

  memory-service:
    build:
      context: ../../server
      dockerfile: cmd/memory-service/Dockerfile
    container_name: memory-service
    ports:
      - "8080:8080"
    environment:
      - SPANNER_EMULATOR_HOST=spanner-emulator:9010
      - MEMORY_BACKEND_GCP_PROJECT_ID=synapse-memory
      - MEMORY_BACKEND_SPANNER_INSTANCE_ID=synapse-instance
      - MEMORY_BACKEND_SPANNER_DATABASE_ID=synapse-memory
      - MEMORY_BACKEND_ENVIRONMENT=development
      - MEMORY_BACKEND_HTTP_PORT=8080
      - MEMORY_BACKEND_WAVIATE_URL=weaviate:8080
      - MEMORY_BACKEND_DB_DRIVER=spanner-pg
      - MEMORY_BACKEND_BUILD_TARGET=cloud-dev
      - MEMORY_BACKEND_TESTING_USE_EMULATOR=true
    networks:
      - memory-network
    restart: unless-stopped
    extra_hosts:
      - "localhost:host-gateway"
    depends_on:
      db-health-check:
        condition: service_completed_successfully

  weaviate:
    container_name: weaviate
    image: cr.weaviate.io/semitechnologies/weaviate:1.31.2
    platform: linux/arm64
    ports:
      - "8082:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: "20"
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      DEFAULT_VECTORIZER_MODULE: "none"
      PERSISTENCE_DATA_PATH: /var/lib/weaviate
    networks:
      - memory-network
    restart: unless-stopped

    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/v1/meta || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5

  indexer:
    container_name: indexer
    build:
      context: ../../server
      dockerfile: cmd/indexer-prototype/Dockerfile
    depends_on:
      weaviate:
        condition: service_healthy
      db-health-check:
        condition: service_completed_successfully
    environment:
      - SPANNER_EMULATOR_HOST=spanner-emulator:9010
      - SPANNER_PROJECT_ID=synapse-memory
      - SPANNER_INSTANCE_ID=synapse-instance
      - SPANNER_DATABASE_ID=synapse-memory
      - WAVIATE_URL=weaviate:8080
      - EMBED_PROVIDER=ollama
      - EMBED_MODEL=mxbai-embed-large
      - INDEX_INTERVAL=1s
    extra_hosts:
      - "localhost:host-gateway"
    networks:
      - memory-network
    restart: unless-stopped

  # One-off container to bootstrap a deterministic local user for development
  user-bootstrap:
    container_name: user-bootstrap
    build:
      context: ../../server
      dockerfile: cmd/memoryctl/Dockerfile
    depends_on:
      memory-service:
        condition: service_started
    networks:
      - memory-network
    restart: "no"
    entrypoint: ["sh", "-c"]
    command: >
      "
        until curl -s http://memory-service:8080/api/health | grep 'UP'; do
          echo 'waiting for memory-service...';
          sleep 2;
        done;
        ./memoryctl users create --userId local_user --email dev@localhost.local --name 'Local User' --api http://memory-service:8080 || true
      "

networks:
  memory-network:
    driver: bridge
    name: synapse-memory-network 