name: mycelian-memory-service

services:
  postgres:
    image: postgres:16-alpine
    container_name: memory-postgres
    environment:
      - POSTGRES_USER=memory
      - POSTGRES_PASSWORD=memory
      - POSTGRES_DB=memory
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U memory -d memory"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - memory-network
    volumes:
      - ../../data/postgres:/var/lib/postgresql/data

  migrations:
    image: postgres:16-alpine
    container_name: memory-postgres-migrations
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PGPASSWORD=memory
    volumes:
      - ../../server/internal/storage/postgres/schema.sql:/schema/schema.sql:ro
    entrypoint: ["sh", "-c"]
    command: >
      "psql -h postgres -U memory -d memory -f /schema/schema.sql && echo 'MIGRATIONS COMPLETED'"
    networks:
      - memory-network
    restart: "no"

  memory-service:
    build:
      context: ../..
      dockerfile: cmd/memory-service/Dockerfile
    container_name: memory-service
    ports:
      - "11545:11545"
    environment:
      - MEMORY_SERVER_ENVIRONMENT=development
      - MEMORY_SERVER_DEV_MODE=true
      - MEMORY_SERVER_HTTP_PORT=11545
      - MEMORY_SERVER_DB_DRIVER=postgres
      - MEMORY_SERVER_BUILD_TARGET=cloud-dev
      - MEMORY_SERVER_POSTGRES_DSN=postgres://memory:memory@postgres:5432/memory?sslmode=disable
      - MEMORY_SERVER_SEARCH_INDEX_URL=weaviate:8080
      - MEMORY_SERVER_EMBED_PROVIDER=ollama
      - MEMORY_SERVER_EMBED_MODEL=nomic-embed-text
      - MEMORY_SERVER_HEALTH_INTERVAL_SECONDS=5
      - MEMORY_SERVER_HEALTH_PROBE_TIMEOUT_SECONDS=2
      - OLLAMA_URL=http://host.docker.internal:11434
    depends_on:
      migrations:
        condition: service_completed_successfully
      weaviate:
        condition: service_healthy
      ollama-health:
        condition: service_completed_successfully
    networks:
      - memory-network
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  weaviate:
    container_name: weaviate
    image: cr.weaviate.io/semitechnologies/weaviate:1.31.2
    platform: linux/arm64
    ports:
      - "8082:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: "20"
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      DEFAULT_VECTORIZER_MODULE: "none"
      PERSISTENCE_DATA_PATH: /var/lib/weaviate
    networks:
      - memory-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/v1/meta || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5

  ollama-health:
    image: curlimages/curl:latest
    container_name: ollama-health-check
    networks:
      - memory-network
    restart: "no"
    entrypoint: ["sh", "-c"]
    command: >
      "
        echo 'Checking Ollama health at host.docker.internal:11434...';
        until curl -sf http://host.docker.internal:11434/api/tags; do
          echo 'Waiting for Ollama to be available...';
          sleep 2;
        done;
        echo 'Ollama is responding. Checking for nomic-embed-text model...';
        if curl -s http://host.docker.internal:11434/api/tags | grep -q 'nomic-embed-text'; then
          echo 'Model nomic-embed-text found';
        else
          echo 'WARNING: Model nomic-embed-text not found, but Ollama is responding';
        fi;
        echo 'OLLAMA HEALTH CHECK COMPLETED'
      "
    extra_hosts:
      - "host.docker.internal:host-gateway"

  outbox-worker:
    container_name: outbox-worker
    build:
      context: ../..
      dockerfile: cmd/outbox-worker/Dockerfile
    environment:
      - MEMORY_SERVER_POSTGRES_DSN=postgres://memory:memory@postgres:5432/memory?sslmode=disable
      - MEMORY_SERVER_SEARCH_INDEX_URL=weaviate:8080
      - MEMORY_SERVER_EMBED_PROVIDER=ollama
      - MEMORY_SERVER_EMBED_MODEL=nomic-embed-text
      - MEMORY_SERVER_HEALTH_INTERVAL_SECONDS=5
      - MEMORY_SERVER_HEALTH_PROBE_TIMEOUT_SECONDS=2
      - OLLAMA_URL=http://host.docker.internal:11434
    depends_on:
      migrations:
        condition: service_completed_successfully
      weaviate:
        condition: service_healthy
      ollama-health:
        condition: service_completed_successfully
    networks:
      - memory-network
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  user-bootstrap:
    container_name: user-bootstrap
    build:
      context: ../..
      dockerfile: tools/mycelian-service-tools/Dockerfile
    depends_on:
      memory-service:
        condition: service_started
    networks:
      - memory-network
    restart: "no"
    entrypoint: ["sh", "-c"]
    command: >
      "
        until curl -s http://memory-service:11545/v0/health | grep '"status":"healthy"'; do
          echo 'waiting for memory-service...';
          sleep 2;
        done;
        ./mycelian-service-tools users create --userId local_user --email local.user@example.com --name 'Local User' --api http://memory-service:11545 || true
      "

networks:
  memory-network:
    driver: bridge
    name: synapse-memory-network


