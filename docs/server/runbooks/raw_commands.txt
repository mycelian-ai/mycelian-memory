Read file: internal/indexer-prototype/uploader.go

Read file: internal/core/memory/service.go

Read file: docker-compose.yml

Below is a step-by-step curl walkthrough that mirrors what the e2e test does, but lets you see every response in the terminal.

Feel free to paste the block as-is; it uses `jq` to pull IDs from earlier responses and keeps them in shell variables.

```bash

export API="http://localhost:8080" 
export WAVIATE="http://localhost:8082"
export EMAIL="curl-demo-$(date +%s)@example.com"
export TEXT="Hello from curl demo $(date +%s)"



curl -s -X POST "$API/api/users" \
     -H 'Content-Type: application/json' \
     -d '{"email":"'"$EMAIL"'"}' | tee user.json
export USER_ID=$(jq -r '.userId' user.json)


curl -s -X POST "$API/api/users/$USER_ID/memories" \
     -H 'Content-Type: application/json' \
     -d '{"memoryType":"CONVERSATION","title":"curl demo"}' | tee mem.json
export MEM_ID=$(jq -r '.memoryId' mem.json)


curl -s -X POST "$API/api/users/$USER_ID/memories/$MEM_ID/entries" \
     -H 'Content-Type: application/json' \
     -d '{"rawEntry":"'"$TEXT"'","summary":"curl summary"}' | tee entry.json
export ENTRY_ID=$(jq -r '.entryId' entry.json)





curl -s -X POST http://localhost:8082/v1/graphql \
  -H 'Content-Type: application/json' \
  -d @- <<EOF | jq .
{
  "query": "{
    Get {
      MemoryEntry(
        tenant: \"${USER_ID}\",
        where: {
          path: [\"entryId\"],
          operator: Equal,
          valueText: \"${ENTRY_ID}\"
        },
        limit: 1
      ) {
        entryId
        memoryId
        summary
      }
    }
  }"
}
EOF


curl -s -X PUT "$API/api/users/$USER_ID/memories/$MEM_ID/contexts" \
  -H 'Content-Type: application/json' \
  -d '{
        "context": {
          "agenda": "Design review at 2 PM",
          "dri":    "alice@example.com"
        }
      }' | tee ctx.json


curl -s -X POST "$WAVIATE/v1/graphql" -H 'Content-Type: application/json' -d @- <<EOF | jq .
{                                      
  "query": "{
    Get {           
      MemoryContext(                        
        tenant: \"$USER_ID\",          
        where: {
          path: [\"memoryId\"],
          operator: Equal,
          valueText: \"$MEM_ID\"
        },
        limit: 3
      ) { context creationTime }
    }
  }"
}
EOF


curl -s -X POST "$API/api/search" \
  -H 'Content-Type: application/json' \
  -d '{"userId":"'"$USER_ID"'","memoryId":"'"$MEM_ID"'","query":"design review"}' | jq .


export USER_ID="00f6650c-0c32-493a-bdfd-cf54a259fa28"
export MEM="b753557a-e207-435e-8984-e3b02a86d20c"
export EID="6f53f629-41b3-4573-a77c-1aaef8f36e3f"


