[
  {
    "name": "create_memory",
    "description": "Create a new memory object and return its ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "title": {"type": "string"},
        "memory_type": {"type": "string", "default": "chat"},
        "description": {"type": "string", "default": ""}
      },
      "required": ["title"],
      "$defs": {"UUID": {"type": "string", "format": "uuid"}}
    }
  },
  {
    "name": "get_memory",
    "description": "Fetch metadata for a memory (title, type, stats).",
    "parameters": {
      "type": "object",
      "properties": {
        "memory_id": {"$ref": "#/$defs/UUID"}
      },
      "required": ["memory_id"],
      "$defs": {"UUID": {"type": "string", "format": "uuid"}}
    }
  },
  {
    "name": "list_entries",
    "description": "List recent entries in a memory (chronological order).",
    "parameters": {
      "type": "object",
      "properties": {
        "memory_id": {"$ref": "#/$defs/UUID"},
        "limit": {"type": "integer", "default": 10}
      },
      "required": ["memory_id"],
      "$defs": {"UUID": {"type": "string", "format": "uuid"}}
    }
  },
  {
    "name": "await_consistency",
    "description": "Block until previous writes become strongly consistent.",
    "parameters": {"type": "object", "properties": {}, "required": []}
  },
  {
    "name": "get_user",
    "description": "Get detailed information about a specific user.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id": {"type": "string", "description": "The UUID of the user"}
      },
      "required": ["user_id"]
    }
  },
  {
    "name": "search_memories",
    "description": "Hybrid search across all memories; returns ranked hits.",
    "parameters": {
      "type": "object",
      "properties": {
        "query": {"type": "string"},
        "top_k": {"type": "integer", "default": 5}
      },
      "required": ["query"]
    }
  },
  {
    "name": "add_entry",
    "description": "Persist raw_entry and its summary in a memory.",
    "parameters": {
      "type": "object",
      "$defs": {
        "UUID": {"type": "string", "format": "uuid"},
        "EntryTags": {"type": "object", "additionalProperties": {"type": "string"}}
      },
      "properties": {
        "memory_id": {"$ref": "#/$defs/UUID"},
        "raw_entry": {"type": "string"},
        "summary": {"type": "string"},
        "role": {"type": "string"},
        "tags": {"$ref": "#/$defs/EntryTags"}
      },
      "required": ["memory_id", "raw_entry", "summary", "role"]
    }
  },
  {
    "name": "get_context",
    "description": "Fetch the latest context document for a memory.",
    "parameters": {
      "type": "object",
      "$defs": {"UUID": {"type": "string", "format": "uuid"}},
      "properties": {
        "memory_id": {"$ref": "#/$defs/UUID"}
      },
      "required": ["memory_id"]
    }
  },
  {
    "name": "put_context",
    "description": "Write the updated context document for a memory.",
    "parameters": {
      "type": "object",
      "$defs": {"UUID": {"type": "string", "format": "uuid"}},
      "properties": {
        "memory_id": {"$ref": "#/$defs/UUID"},
        "content": {"type": "string"}
      },
      "required": ["memory_id", "content"]
    }
  },
  {
    "name": "get_default_prompts",
    "description": "Return default prompt templates for a given memory type.",
    "parameters": {
      "type": "object",
      "properties": {
        "memory_type": {"type": "string", "description": "Memory type, e.g. chat, code"}
      },
      "required": ["memory_type"]
    }
  },
  {
    "name": "list_assets",
    "description": "Return the list of available static asset IDs the model can fetch via get_asset.",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_asset",
    "description": "Return the raw text content of a static prompt or rule asset identified by id.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {"type": "string", "description": "Logical asset identifier returned by list_assets"}
      },
      "required": ["id"]
    }
  },
  {
    "name": "list_vaults",
    "description": "List all vaults for a user (returns vaultId & title).",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id": {"type": "string", "format": "uuid"}
      },
      "required": ["user_id"]
    }
  },
  {
    "name": "create_vault",
    "description": "Create a vault under the user; returns vaultId & title.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id": {"type": "string", "format": "uuid"},
        "title": {"type": "string"},
        "description": {"type": "string"}
      },
      "required": ["user_id", "title"]
    }
  },
  {
    "name": "list_memories",
    "description": "List memories inside a vault (returns id & title).",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id": {"type": "string", "format": "uuid"},
        "vault_id": {"type": "string", "format": "uuid"}
      },
      "required": ["user_id", "vault_id"]
    }
  },
  {
    "name": "create_memory_in_vault",
    "description": "Create a memory inside a vault; returns memoryId.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id": {"type": "string", "format": "uuid"},
        "vault_id": {"type": "string", "format": "uuid"},
        "title": {"type": "string"},
        "memory_type": {"type": "string"},
        "description": {"type": "string"}
      },
      "required": ["user_id", "vault_id", "title", "memory_type"]
    }
  }
] 